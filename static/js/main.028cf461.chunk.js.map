{"version":3,"sources":["Components/categories.js","Components/imagesUpload.js","App.js","reportWebVitals.js","index.js"],"names":["TabPanel","props","children","value","index","other","role","hidden","id","Box","p","Typography","a11yProps","useStyles","makeStyles","theme","root","flexGrow","backgroundColor","palette","background","paper","SimpleTabs","classes","React","useState","setValue","data","setData","category","setCategory","settings","dots","infinite","speed","slidesToShow","slidesToScroll","useEffect","a","axios","result","console","log","axiosData","className","AppBar","position","Tabs","onChange","event","newValue","Tab","label","onClick","Array","fill","map","el","item","src","image","alt","ImagesUpload","pictures","setPictures","withIcon","picture","imgExtension","maxFileSize","withPreview","App","colors","setTheme","style","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.028cf461.chunk.js","sourcesContent":["import \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport axios from \"axios\";\r\nimport Slider from \"react-slick\";\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`simple-tabpanel-${index}`}\r\n            aria-labelledby={`simple-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box p={3}>\r\n                    <Typography>{children}</Typography>\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `simple-tab-${index}`,\r\n        'aria-controls': `simple-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n}));\r\n\r\nexport default function SimpleTabs() {\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState(0);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    const [data,setData] = useState([])\r\n    const [category,setCategory] = useState(\"electronics\")\r\n\r\n    const settings = {\r\n        dots: false,\r\n        infinite: true,\r\n        speed: 500,\r\n        slidesToShow: 3,\r\n        slidesToScroll: 1\r\n    };\r\n\r\n    useEffect(() => {\r\n        const axiosData = async () => {\r\n            const result = await axios(`https://fakestoreapi.com/products/category/${category}`)\r\n            console.log(result);\r\n            setData(result.data);\r\n        };\r\n        axiosData();\r\n    }, [category])\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar position=\"static\">\r\n                <Tabs value={value} onChange={handleChange} aria-label=\"simple tabs example\">\r\n                    <Tab label=\"Electronics\" onClick={() => setCategory(\"electronics\")} {...a11yProps(0)} />\r\n                    <Tab label=\"Jewelery\" onClick={() => setCategory(\"jewelery\")} {...a11yProps(1)} />\r\n                    <Tab label=\"Men's clothing\" onClick={() => setCategory(\"men's clothing\")} {...a11yProps(2)} />\r\n                    <Tab label=\"Women's clothing\"  onClick={() => setCategory(\"women's clothing\")} {...a11yProps(3)} />\r\n                </Tabs>\r\n            </AppBar>\r\n            {Array(4).fill(0).map((el, index) => {\r\n                return (\r\n                    <TabPanel className=\"tabContent\" value={value} index={index}>\r\n                        <Slider {...settings}>\r\n                            {data.map((item) => {\r\n                                return (\r\n                                    <img src={item.image} className=\"categoryImage\" alt=\"\"/>\r\n                                )\r\n                            })}\r\n                        </Slider>\r\n                    </TabPanel>\r\n                )\r\n            })}\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport ImageUploader from \"react-images-upload\";\r\n\r\nconst ImagesUpload = props => {\r\n    const [pictures, setPictures] = useState([]);\r\n\r\n    const onDrop = picture => {\r\n        setPictures([...pictures, picture]);\r\n    };\r\n    return (\r\n        <ImageUploader\r\n            {...props}\r\n            withIcon={true}\r\n            onChange={onDrop}\r\n            imgExtension={[\".jpg\", \".gif\", \".png\", \".gif\"]}\r\n            maxFileSize={5242880}\r\n            withPreview={true}\r\n        />\r\n    );\r\n};\r\n\r\nexport default ImagesUpload;\r\n","import \"./App.css\"\nimport React, { useState } from 'react';\nimport Categories from \"./Components/categories\";\nimport ImagesUpload from \"./Components/imagesUpload\";\n\nfunction App() {\n    const [colors,setColors] = useState([\"#F0F0A7\",\"blue\",\"#219653\", \"red\",\"purple\",\"#B9A5F0\",\"#8D95F0\",\"#84F09B\",\"yellow\",\"black\",\"#F05C00\"])\n    const [theme,setTheme] = useState(\"transparent\")\n\n    return (\n        <div className=\"App\" style={{background: theme }}>\n            <div className=\"colorsBlock\">\n                {colors.map((item) => {\n                    return (\n                        <span style={{background: item }} onClick={() => setTheme(item)}></span>\n                    )\n                })}\n            </div>\n            <Categories />\n            <ImagesUpload />\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}